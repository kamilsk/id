(function(a,b,c,d){'use strict';function e(o){h.debug&&c(d.prefix+o)}function f(){return!k&&j>d.limit&&c(d.prefix+'critical: payload was not be sent'),k||j>d.limit}function g(o,p){if(f())return clearInterval(o),void e(p+' is done');if(!l){l=!0,j++;let q=new FormData;q.append('fingerprint',i.fingerprint),fetch(new Request(d.endpoint,{method:'POST',body:q,credentials:'include'})).then(r=>{200===r.status&&(k=!0,h.fingerprint=i.fingerprint,e('sender has synced a payload'))}).finally(()=>{l=!1,e(p+' has sent a notification to '+d.endpoint)})}}let h=a.Passport=a.Passport||{debug:d.debug},i={fingerprint:void 0},j=0,k=!1,l=!1,m=setInterval(function(){let o=1;return new b().get(function(p){i.fingerprint=p}),function(){new b().get(function(p){p!==i.fingerprint&&(i.fingerprint=p,o=0,e('corrector has made a correction')),++o>=d.threshold&&g(m,'corrector')})}}(),d.correct),n=setInterval(function(){g(n,'watcher')},d.watch)})(window,window.Fingerprint2,window.console.log,{endpoint:'{{.Endpoint}}',prefix:'passport: ',limit:3,threshold:3,correct:250,watch:1000,debug:!0});
